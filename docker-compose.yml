services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: github-issue-bot
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    depends_on:
      - database
    networks:
      - bot-network
    command: php artisan serve --host=0.0.0.0 --port=8000

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: github-issue-bot-queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
    depends_on:
      - database
    networks:
      - bot-network
    command: php artisan queue:work --tries=3 --timeout=600

  database:
    image: postgres:18
    container_name: open-producer-bot-db
    restart: "unless-stopped"
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_DATABASE:-github_bot}
      POSTGRES_USER: ${DB_USERNAME:-bot_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh:ro
    ports:
      - "5432:5432"
    networks:
      - bot-network

  # Optional: Redis for caching and queues
  valkey:
    image: valkey/valkey:latest
    container_name: github-issue-bot-valkey
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - bot-network
    volumes:
      - valkey-data:/data

networks:
  bot-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  valkey-data:
    driver: local
